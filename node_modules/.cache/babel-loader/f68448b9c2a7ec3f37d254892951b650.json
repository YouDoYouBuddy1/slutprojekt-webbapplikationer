{"remainingRequest":"C:\\Users\\Fabian'\\Documents\\HTML_LAB\\slutprojekt-webbapplikationer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Fabian'\\Documents\\HTML_LAB\\slutprojekt-webbapplikationer\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Fabian'\\Documents\\HTML_LAB\\slutprojekt-webbapplikationer\\src\\api\\user.js","dependencies":[{"path":"C:\\Users\\Fabian'\\Documents\\HTML_LAB\\slutprojekt-webbapplikationer\\src\\api\\user.js","mtime":1591605980906},{"path":"C:\\Users\\Fabian'\\Documents\\HTML_LAB\\slutprojekt-webbapplikationer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Fabian'\\Documents\\HTML_LAB\\slutprojekt-webbapplikationer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Fabian'\\Documents\\HTML_LAB\\slutprojekt-webbapplikationer\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvRmFiaWFuJy9Eb2N1bWVudHMvSFRNTF9MQUIvc2x1dHByb2pla3Qtd2ViYmFwcGxpa2F0aW9uZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgQXBpIGZyb20gIi4vYXBpIjsKZXhwb3J0IGRlZmF1bHQgewogIHJlZ2lzdGVyOiBmdW5jdGlvbiByZWdpc3RlcihyZWdpc3RyYXRpb25Gb3JtKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgcmVzdWx0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIEFwaS5wb3N0KCJyZWdpc3RlciIsIHJlZ2lzdHJhdGlvbkZvcm0pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgYWxlcnQocmVzdWx0LmRhdGEubWVzc2FnZSk7CiAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0LnN0YXR1cywgcmVzdWx0LmRhdGEpOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gODsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgIGFsZXJ0KCJSZWdpc3RyYXRpb24gZmFpbGVkOiAiICsgX2NvbnRleHQudDAucmVzcG9uc2UuZGF0YS5lcnJvcnMpOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0LnQwLnJlc3BvbnNlKTsKCiAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgOF1dKTsKICAgIH0pKSgpOwogIH0sCiAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKGxvZ2luRGF0YSkgewogICAgcmV0dXJuIEFwaS5wb3N0KCJhdXRoIiwgbG9naW5EYXRhKTsKICB9IC8vIEFsdGVybmF0aXZlbHkgd3JpdHRlbjoKICAvLyAgIGxvZ2luKGVtYWlsLCBwYXNzd29yZCkgewogIC8vICAgICByZXR1cm4gQXBpKHsKICAvLyAgICAgICBtZXRob2Q6ICJwb3N0IiwKICAvLyAgICAgICB1cmw6ICIvYXV0aCIsCiAgLy8gICAgICAgZGF0YTogewogIC8vICAgICAgICAgZW1haWw6IGVtYWlsLAogIC8vICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkLAogIC8vICAgICAgIH0sCiAgLy8gICAgIH0pOwogIC8vICAgfSwKCn07"},{"version":3,"sources":["C:/Users/Fabian'/Documents/HTML_LAB/slutprojekt-webbapplikationer/src/api/user.js"],"names":["Api","register","registrationForm","post","result","alert","data","message","console","log","status","response","errors","login","loginData"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAEA,eAAe;AACLC,EAAAA,QADK,oBACIC,gBADJ,EACsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAENF,GAAG,CAACG,IAAJ,CAAS,UAAT,EAAqBD,gBAArB,CAFM;;AAAA;AAErBE,cAAAA,MAFqB;AAGzBC,cAAAA,KAAK,CAACD,MAAM,CAACE,IAAP,CAAYC,OAAb,CAAL;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,MAAnB,EAA2BN,MAAM,CAACE,IAAlC;AAJyB;AAAA;;AAAA;AAAA;AAAA;AAMzBD,cAAAA,KAAK,CAAC,0BAA0B,YAAMM,QAAN,CAAeL,IAAf,CAAoBM,MAA/C,CAAL;AACAJ,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAME,QAAlB;;AAPyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUhC,GAXU;AAYXE,EAAAA,KAZW,iBAYLC,SAZK,EAYM;AACb,WAAOd,GAAG,CAACG,IAAJ,CAAS,MAAT,EAAiBW,SAAjB,CAAP;AACH,GAdU,CAiBX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA3BW,CAAf","sourcesContent":["import Api from \"./api\";\r\n\r\nexport default {\r\n    async register(registrationForm) {\r\n        try {\r\n            let result = await Api.post(\"register\", registrationForm);\r\n            alert(result.data.message);\r\n            console.log(result.status, result.data);\r\n        } catch (error) {\r\n            alert(\"Registration failed: \" + error.response.data.errors);\r\n            console.log(error.response);\r\n        }\r\n\r\n    },\r\n    login(loginData) {\r\n        return Api.post(\"auth\", loginData);\r\n    },\r\n\r\n        \r\n    // Alternatively written:\r\n    //   login(email, password) {\r\n    //     return Api({\r\n    //       method: \"post\",\r\n    //       url: \"/auth\",\r\n    //       data: {\r\n    //         email: email,\r\n    //         password: password,\r\n    //       },\r\n    //     });\r\n    //   },\r\n}"]}]}