{"remainingRequest":"/Users/garrido/iths/repos/project_repo/slutprojekt-webbapplikationer/node_modules/babel-loader/lib/index.js!/Users/garrido/iths/repos/project_repo/slutprojekt-webbapplikationer/node_modules/eslint-loader/index.js??ref--13-0!/Users/garrido/iths/repos/project_repo/slutprojekt-webbapplikationer/src/api/orders.js","dependencies":[{"path":"/Users/garrido/iths/repos/project_repo/slutprojekt-webbapplikationer/src/api/orders.js","mtime":1591707855000},{"path":"/Users/garrido/iths/repos/project_repo/slutprojekt-webbapplikationer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/garrido/iths/repos/project_repo/slutprojekt-webbapplikationer/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/garrido/iths/repos/project_repo/slutprojekt-webbapplikationer/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2dhcnJpZG8vaXRocy9yZXBvcy9wcm9qZWN0X3JlcG8vc2x1dHByb2pla3Qtd2ViYmFwcGxpa2F0aW9uZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgQXBpIGZyb20gJy4vYXBpLmpzJzsKaW1wb3J0IFN0b3JlIGZyb20gJy4uL3N0b3JlL3N0b3JlLmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIGdldE9yZGVyczogZnVuY3Rpb24gZ2V0T3JkZXJzKCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHRva2VuLCBjb25maWcsIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgIHRva2VuID0gU3RvcmUuc3RhdGUudG9rZW47CiAgICAgICAgICAgICAgY29uZmlnID0gewogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiAiQmVhcmVyICIgKyB0b2tlbgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgcmV0dXJuIEFwaS5nZXQoIm9yZGVycyIsIGNvbmZpZyk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA5OwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDAucmVzcG9uc2UpOwoKICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCA5XV0pOwogICAgfSkpKCk7CiAgfSwKICBwb3N0T3JkZXJzOiBmdW5jdGlvbiBwb3N0T3JkZXJzKG9yZGVyKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIHRva2VuLCBjb25maWcsIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7CiAgICAgICAgICAgICAgdG9rZW4gPSBTdG9yZS5zdGF0ZS50b2tlbjsKICAgICAgICAgICAgICBjb25maWcgPSB7CiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIiArIHRva2VuCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7CiAgICAgICAgICAgICAgcmV0dXJuIEFwaS5wb3N0KCJvcmRlcnMiLCBvcmRlciwgY29uZmlnKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMjsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDk7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0Mi50MC5yZXNwb25zZSk7CgogICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMCwgOV1dKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["/Users/garrido/iths/repos/project_repo/slutprojekt-webbapplikationer/src/api/orders.js"],"names":["Api","Store","getOrders","token","state","config","headers","Authorization","get","res","console","log","data","response","postOrders","order","post"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,eAAe;AAELC,EAAAA,SAFK,uBAEO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEJC,cAAAA,KAFI,GAEIF,KAAK,CAACG,KAAN,CAAYD,KAFhB;AAIJE,cAAAA,MAJI,GAIK;AACXC,gBAAAA,OAAO,EAAE;AACTC,kBAAAA,aAAa,EAAE,YAAaJ;AADnB;AADE,eAJL;AAAA;AAAA,qBASMH,GAAG,CAACQ,GAAJ,CAAQ,QAAR,EAAkBH,MAAlB,CATN;;AAAA;AASNI,cAAAA,GATM;AAUVC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AAVU;AAAA;;AAAA;AAAA;AAAA;AAYVF,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAEE,QAAd;;AAZU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcjB,GAhBU;AAiBLC,EAAAA,UAjBK,sBAiBMC,KAjBN,EAiBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEVZ,cAAAA,KAFU,GAEFF,KAAK,CAACG,KAAN,CAAYD,KAFV;AAIZE,cAAAA,MAJY,GAIH;AACTC,gBAAAA,OAAO,EAAE;AACLC,kBAAAA,aAAa,EAAE,YAAaJ;AADvB;AADA,eAJG;AAAA;AAAA,qBASAH,GAAG,CAACgB,IAAJ,CAAS,QAAT,EAAmBD,KAAnB,EAA0BV,MAA1B,CATA;;AAAA;AASZI,cAAAA,GATY;AAUhBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AAVgB;AAAA;;AAAA;AAAA;AAAA;AAYhBF,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAEE,QAAd;;AAZgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcvB;AA/BU,CAAf","sourcesContent":["import Api from './api.js'\nimport Store from '../store/store.js'\nexport default {\n    \n    async getOrders() {\n        try {\n            const token = Store.state.token;\n\n            const config = {\n                headers: {\n                Authorization: \"Bearer \"  + token\n            } }\n\n            let res = await Api.get(\"orders\", config);\n            console.log(res.data);\n        } catch (e) {\n            console.log(e.response);\n        }\n    },\n    async postOrders(order) {\n        try {\n            const token = Store.state.token;\n            \n            let config = {\n                headers: {\n                    Authorization: \"Bearer \"  + token\n                }\n            }\n            let res = await Api.post(\"orders\", order, config);\n            console.log(res.data);\n        } catch (e) {\n            console.log(e.response);\n        }\n    }\n}"]}]}