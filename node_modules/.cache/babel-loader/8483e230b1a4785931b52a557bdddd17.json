{"remainingRequest":"/Users/garrido/SlutProj/slutprojekt-webbapplikationer/node_modules/babel-loader/lib/index.js!/Users/garrido/SlutProj/slutprojekt-webbapplikationer/node_modules/eslint-loader/index.js??ref--13-0!/Users/garrido/SlutProj/slutprojekt-webbapplikationer/src/store/store.js","dependencies":[{"path":"/Users/garrido/SlutProj/slutprojekt-webbapplikationer/src/store/store.js","mtime":1591827930000},{"path":"/Users/garrido/SlutProj/slutprojekt-webbapplikationer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/garrido/SlutProj/slutprojekt-webbapplikationer/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/garrido/SlutProj/slutprojekt-webbapplikationer/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/garrido/SlutProj/slutprojekt-webbapplikationer/src/store/store.js"],"names":["Vue","Vuex","Api","User","Products","Orders","Cart","use","Store","state","products","product","user","token","orders","cart","mutations","SAVE_USER","SAVE_PRODUCTS","SAVE_TOKEN","SAVE_PRODUCT","SAVE_ORDERS","SAVE_PRODUCT_TO_CART","push","actions","addToCart","commit","loadProducts","get","result","data","console","log","response","login","loginData","defaults","headers","common","alert","errors","register","context","registration","registerUser","message","status","getProduct","id","createOrders","itemsID","map","_id","order","items","res","getOrders","createProduct","newProduct","getters","orderValue","sum","item","price","reduce","prev","curr","modules"],"mappings":"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","sourcesContent":["import Vue from \"vue\"\nimport Vuex from \"vuex\"\nimport Api from \"@/api/api.js\"\nimport User from \"@/api/user.js\"\nimport Products from '@/api/products.js'\nimport Orders from '@/api/orders.js'\nimport Cart from \"./modules/cart/cart.js\"\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n    state: {\n        products: [],\n        product: [],\n        user: [],\n        token: \"\",\n        orders: [],\n        cart: [{\"title\":\"Hoodie\",\"price\":699,\"shortDesc\":\"Fire unisex\",\"category\":\"clothes\",\"longDesc\":\"Skate ipsum dolor sit amet, 50-50 Sidewalk Surfer nose bump kickflip bruised heel fakie berm soul skate. Bluntslide transition nollie hard flip bank pressure flip ho-ho. Steps rip grip nosepicker roll-in yeah 540 pump. \",\"imgFile\":\"hoodie-fire.png\",\"serial\":\"9919312731273772\",\"_id\":\"2INrlDFVi4HGnKS4\"},\n        {\"title\":\"Awesome\",\"price\":799,\"shortDesc\":\"Unisex\",\"category\":\"board\",\"longDesc\":\"Axle crailtap fastplant dude regular footed helipop impossible. Wax Jimmy'Z half-flip transfer nollie launch ramp mongo egg plant. Pogo slap maxwell g-turn boneless risers blunt nose slide.\",\"imgFile\":\"skateboard-generic.png\",\"serial\":\"2384993841228443\",\"_id\":\"4R1qup39Yo6x93Xo\"},\n        {\"title\":\"Spinner\",\"price\":249,\"shortDesc\":\"Soft\",\"category\":\"wheels\",\"longDesc\":\"Skate ipsum dolor sit amet, 50-50 Sidewalk Surfer nose bump kickflip bruised heel fakie berm soul skate. Bluntslide transition nollie hard flip bank pressure flip ho-ho. Steps rip grip nosepicker roll-in yeah 540 pump. \",\"imgFile\":\"wheel-spinner.png\",\"serial\":\"239491299929222\",\"_id\":\"50bA3kqmfVMpyRdB\"},\n        {\"title\":\"Hiphop\",\"price\":799,\"shortDesc\":\"Unisex\",\"category\":\"board\",\"longDesc\":\"Skate ipsum dolor sit amet, 50-50 Sidewalk Surfer nose bump kickflip bruised heel fakie berm soul skate. Bluntslide transition nollie hard flip bank pressure flip ho-ho. Steps rip grip nosepicker roll-in yeah 540 pump. \",\"imgFile\":\"skateboard-generic.png\",\"serial\":\"2834982384832822\",\"_id\":\"A8kHboBk4fSQFPoZ\"}\n        ]\n    },\n    mutations: {\n        SAVE_USER(state, user) {\n            state.user = user;\n        },\n\n\n        SAVE_PRODUCTS(state, products) {\n            state.products = products;\n        },\n\n        \n        SAVE_TOKEN(state, token) {\n            state.token = token;\n        },\n        SAVE_PRODUCT(state, product) {\n            state.product = product;\n        },\n        SAVE_ORDERS(state, orders) {\n            state.orders = orders;\n        },\n        SAVE_PRODUCT_TO_CART(state, product) {\n            state.cart.push(product);\n        }\n    },\n\n    actions: {\n        addToCart({commit}, product) {\n            commit(\"SAVE_PRODUCT_TO_CART\", product);\n        },\n        async loadProducts({ commit }) {\n            try {\n                let result = await Api.get(\"products\")\n                commit(\"SAVE_PRODUCTS\", result.data);\n            }\n            catch (error) {\n                console.log(error.response);\n            }\n        },\n        async login({ commit }, loginData) {\n            try {\n\n                let result = await User.login(loginData);\n                commit(\"SAVE_TOKEN\", result.data.token);\n                console.log(result.data.token);\n                commit(\"SAVE_USER\", result.data.user);\n                if (result) {\n                    Api.defaults.headers.common['Authorization'] = \"Bearer \" + this.state.token;\n                    Api.defaults.headers.common['Content-Type'] = 'application/json'\n                }\n            } catch (error) {\n                alert(\"Registration failed: \" + error.response.data.errors);\n                console.log(error.response);\n            }\n        },\n        async register(context, registration) {\n            try {\n                let result = await User.registerUser(registration);\n                alert(result.data.message);\n                console.log(result.status, result.data);\n\n            } catch (error) {\n                alert(\"Registration failed: \" + error.response.data.errors);\n                console.log(error.response);\n            }\n        },\n        async getProduct({ commit }, id) {\n            try {\n                let result = await Products.getProduct(id);\n                console.log(result.data);\n                commit(\"SAVE_PRODUCT\", result.data);\n            } catch (error) {\n                console.log(error.response);\n            }\n        },\n        async createOrders({state}) {\n            let itemsID = state.cart.map(product => product._id); \n            console.log(\"store-order itemsID\" + itemsID);\n            let order = { items: [] };\n            order.items = itemsID;\n            console.log(order);\n            // let temp = {\n\t\t\t// \titems: [\"A8kHboBk4fSQFPoZ\", \"A8kHboBk4fSQFPoZ\"]\n\t\t\t// } \n            try {\n                let res = await Orders.createOrders(order);\n                console.log(res.data);\n            } catch (e) {\n                console.log(e.response);\n            }\n        },\n        async getOrders({commit}) {\n            try {\n                let res = await Orders.getOrders();\n                console.log(res.data);\n                commit(\"SAVE_ORDERS\", res.data)\n            } catch (e) {\n                console.log(e.response);\n            }\n        },\n        async createProduct(context, newProduct) {\n            try {\n                let res = await Products.createProduct(newProduct);\n                console.log(res.data);\n                return res.data.product._id;\n\n            } catch (error) {\n                console.log(error.response);\n                return \"Failed to create product\"\n            }\n        },\n    },\n    getters: {\n        orderValue: state => {\n            const sum = state.cart.map(item => item.price).reduce((prev, curr) => prev + curr, 0);\n            console.log(sum);\n            return sum;\n        },\n        \n        // {\n        //     let cost = state.cart.map(price).reduce(sum);\n        //     console.log(cost)\n        //     return cost;\n            \n        // }\n    },\n    modules: {\n      Cart,\n    },\n});\n"]}]}